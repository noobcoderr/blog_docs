<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>规划 on MoYuCoder</title>
    <link>http://www.moyuto.top/tags/%E8%A7%84%E5%88%92/</link>
    <description>Recent content in 规划 on MoYuCoder</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 30 Nov 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.moyuto.top/tags/%E8%A7%84%E5%88%92/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>文章模板及注意事项</title>
      <link>http://www.moyuto.top/post/20211130_model/</link>
      <pubDate>Tue, 30 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>http://www.moyuto.top/post/20211130_model/</guid>
      <description>文章模板及注意事项 字段描述 字段 描述 title 文章标题 subtitle 文章子标题 date 文章创建日期 lastmod 文章最后修改日期 author 文章作者 image 该篇文章的背景图片，目前有2张背景可选，</description>
    </item>
    
    <item>
      <title>2021年5月计划</title>
      <link>http://www.moyuto.top/post/2021_05_planings/</link>
      <pubDate>Wed, 19 May 2021 23:11:43 +0800</pubDate>
      
      <guid>http://www.moyuto.top/post/2021_05_planings/</guid>
      <description>要总结的系列 《Python热更的原理与应用》 《Python元类的原理与应用》 要思考清楚的问题 如何整理现有系统的全部信息 如何接手/上手一个新项</description>
    </item>
    
    <item>
      <title>API设计风格之RESTful和RPC风格</title>
      <link>http://www.moyuto.top/post/api_design_style/</link>
      <pubDate>Tue, 19 May 2020 23:11:43 +0800</pubDate>
      
      <guid>http://www.moyuto.top/post/api_design_style/</guid>
      <description>API设计风格之RESTful和RPC风格 最近几件事让我对API的设计风格有了更多的认识。 1、开发谷歌支付后端时，需要调用谷歌billing</description>
    </item>
    
    <item>
      <title>学习计划</title>
      <link>http://www.moyuto.top/post/target/</link>
      <pubDate>Tue, 19 May 2020 23:11:43 +0800</pubDate>
      
      <guid>http://www.moyuto.top/post/target/</guid>
      <description>学习计划 方向 云原生 &amp;gt; Saas &amp;gt; docker/k8s &amp;gt; 后端 计划 基础向 1、计算机网络、http、https、tcp/ip 2、数据结构：数组、链表、树、图 3、算法：排序、</description>
    </item>
    
    <item>
      <title>造轮子之时间轮算法的原理与实现</title>
      <link>http://www.moyuto.top/post/timewheel/</link>
      <pubDate>Tue, 19 May 2020 23:11:43 +0800</pubDate>
      
      <guid>http://www.moyuto.top/post/timewheel/</guid>
      <description>造轮子之时间轮算法的原理与实现 背景 前不久在做一个内部错误日志告警的工具服务，具体工作是定时去es内检索项目下的错误日志，并且将返回的内容告警</description>
    </item>
    
  </channel>
</rss>